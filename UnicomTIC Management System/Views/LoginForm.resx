<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ljg+vBTl/wBZVJaTuxVRnAAAAABJRU5ErkJggg==
</value>
  </data>
</root>