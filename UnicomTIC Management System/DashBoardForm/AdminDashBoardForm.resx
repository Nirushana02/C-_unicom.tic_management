<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>